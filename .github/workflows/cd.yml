name: continuous-deployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Cargo.lock -- copy -> Cargo.lock.orig
      run: cp Cargo.lock Cargo.lock.orig
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock.orig') }}
    - name: Get deps
      run: cargo fetch
    - name: Initial build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Fetch notes
      run: cargo run -- fetch
    - name: Set VERSION
      run: echo "VERSION=$(cargo run)" >> $GITHUB_ENV
    - name: Override version in Cargo files
      run: |
        sed -i Cargo.toml -e "s/0\.0\.0-replaceme/$VERSION/"
        sed -i Cargo.lock -e "s/0\.0\.0-replaceme/$VERSION/"
    - name: Build release binary
      run: cargo build --verbose --release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        body: ""
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/autover
        asset_name: autover-${{ env.VERSION }}
        asset_content_type: application/octet-stream
    - name: Publish to crates.io
      uses: katyo/publish-crates@v1
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      with:
          registry-token: ${{ secrets.CRATES_API_TOKEN }}
          args: '--allow-dirty'
